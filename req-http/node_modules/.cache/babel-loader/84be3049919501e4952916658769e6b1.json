{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react'; // 4 - custom hook\n\nexport const useFetch = url => {\n  _s();\n\n  const [data, setData] = useState(null); //5 - refatorando post\n\n  const [config, setConfig] = useState(null);\n  const [method, setMethod] = useState(null);\n  const [callFetch, setCallFetch] = useState(false); //6 - loading\n\n  const [loading, setLoading] = useState(false); //7 - tratando erros\n\n  const [error, setError] = useState(null);\n\n  const httpConfig = (data, method) => {\n    if (method === \"POST\") {\n      console.log(\"segundo\");\n      setConfig({\n        method,\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(data)\n      });\n      setMethod(method);\n    }\n  };\n\n  useEffect(() => {\n    const fetchData = async () => {\n      //6 - loading\n      setLoading(true);\n      const res = await fetch(url);\n      const json = await res.json();\n      setData(json);\n      setLoading(false);\n    };\n\n    fetchData();\n  }, [url, callFetch]); // 5 - refatorando post\n\n  useEffect(() => {\n    const httpRequest = async () => {\n      if (method === \"POST\") {\n        let fetchOptions = [url, config];\n        const res = await fetch(...fetchOptions);\n        const json = await res.json(); //faz a requisição para atualizar a listagem\n\n        setCallFetch(json);\n      }\n    };\n\n    httpRequest();\n  }, [config, method, url]);\n  return {\n    data,\n    httpConfig,\n    loading\n  };\n};\n\n_s(useFetch, \"WZ62jem/JlFUM5645Zy7tnhRtt0=\");","map":{"version":3,"names":["useState","useEffect","useFetch","url","data","setData","config","setConfig","method","setMethod","callFetch","setCallFetch","loading","setLoading","error","setError","httpConfig","console","log","headers","body","JSON","stringify","fetchData","res","fetch","json","httpRequest","fetchOptions"],"sources":["C:/Users/diego/Documents/Docker/req-http/src/hooks/useFetch.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\n\r\n\r\n// 4 - custom hook\r\nexport const useFetch = (url) => {\r\n    const [data, setData] = useState(null);\r\n\r\n    //5 - refatorando post\r\n    const [config, setConfig] = useState(null);\r\n    const [method, setMethod] = useState(null);\r\n    const [callFetch, setCallFetch] = useState(false);\r\n    \r\n    //6 - loading\r\n    const [loading, setLoading] = useState(false);\r\n    \r\n    //7 - tratando erros\r\n    const [error, setError] = useState(null);\r\n\r\n    const httpConfig = (data, method) => {\r\n        if (method === \"POST\") {\r\n            console.log(\"segundo\");\r\n            setConfig({\r\n                method,\r\n                headers:{\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n                body:JSON.stringify(data)\r\n            });\r\n\r\n            setMethod(method);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            \r\n            //6 - loading\r\n            setLoading(true);\r\n\r\n            const res = await fetch(url);\r\n            const json = await res.json();\r\n            setData(json)\r\n\r\n            setLoading(false);\r\n        }\r\n        fetchData();\r\n    }, [url, callFetch]);\r\n\r\n\r\n    // 5 - refatorando post\r\n    useEffect(() => {\r\n        const httpRequest = async () => {\r\n            if (method === \"POST\") {                \r\n                let fetchOptions = [url, config];\r\n                const res = await fetch(...fetchOptions);\r\n                const json = await res.json();\r\n                \r\n                //faz a requisição para atualizar a listagem\r\n                setCallFetch(json);\r\n                \r\n            }\r\n        }\r\n        httpRequest();\r\n        \r\n    }, [config, method, url]);\r\n\r\n    return { data, httpConfig, loading };\r\n}"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC,C,CAGA;;AACA,OAAO,MAAMC,QAAQ,GAAIC,GAAD,IAAS;EAAA;;EAC7B,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,IAAD,CAAhC,CAD6B,CAG7B;;EACA,MAAM,CAACM,MAAD,EAASC,SAAT,IAAsBP,QAAQ,CAAC,IAAD,CAApC;EACA,MAAM,CAACQ,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAAC,IAAD,CAApC;EACA,MAAM,CAACU,SAAD,EAAYC,YAAZ,IAA4BX,QAAQ,CAAC,KAAD,CAA1C,CAN6B,CAQ7B;;EACA,MAAM,CAACY,OAAD,EAAUC,UAAV,IAAwBb,QAAQ,CAAC,KAAD,CAAtC,CAT6B,CAW7B;;EACA,MAAM,CAACc,KAAD,EAAQC,QAAR,IAAoBf,QAAQ,CAAC,IAAD,CAAlC;;EAEA,MAAMgB,UAAU,GAAG,CAACZ,IAAD,EAAOI,MAAP,KAAkB;IACjC,IAAIA,MAAM,KAAK,MAAf,EAAuB;MACnBS,OAAO,CAACC,GAAR,CAAY,SAAZ;MACAX,SAAS,CAAC;QACNC,MADM;QAENW,OAAO,EAAC;UACJ,gBAAgB;QADZ,CAFF;QAKNC,IAAI,EAACC,IAAI,CAACC,SAAL,CAAelB,IAAf;MALC,CAAD,CAAT;MAQAK,SAAS,CAACD,MAAD,CAAT;IACH;EACJ,CAbD;;EAeAP,SAAS,CAAC,MAAM;IACZ,MAAMsB,SAAS,GAAG,YAAY;MAE1B;MACAV,UAAU,CAAC,IAAD,CAAV;MAEA,MAAMW,GAAG,GAAG,MAAMC,KAAK,CAACtB,GAAD,CAAvB;MACA,MAAMuB,IAAI,GAAG,MAAMF,GAAG,CAACE,IAAJ,EAAnB;MACArB,OAAO,CAACqB,IAAD,CAAP;MAEAb,UAAU,CAAC,KAAD,CAAV;IACH,CAVD;;IAWAU,SAAS;EACZ,CAbQ,EAaN,CAACpB,GAAD,EAAMO,SAAN,CAbM,CAAT,CA7B6B,CA6C7B;;EACAT,SAAS,CAAC,MAAM;IACZ,MAAM0B,WAAW,GAAG,YAAY;MAC5B,IAAInB,MAAM,KAAK,MAAf,EAAuB;QACnB,IAAIoB,YAAY,GAAG,CAACzB,GAAD,EAAMG,MAAN,CAAnB;QACA,MAAMkB,GAAG,GAAG,MAAMC,KAAK,CAAC,GAAGG,YAAJ,CAAvB;QACA,MAAMF,IAAI,GAAG,MAAMF,GAAG,CAACE,IAAJ,EAAnB,CAHmB,CAKnB;;QACAf,YAAY,CAACe,IAAD,CAAZ;MAEH;IACJ,CAVD;;IAWAC,WAAW;EAEd,CAdQ,EAcN,CAACrB,MAAD,EAASE,MAAT,EAAiBL,GAAjB,CAdM,CAAT;EAgBA,OAAO;IAAEC,IAAF;IAAQY,UAAR;IAAoBJ;EAApB,CAAP;AACH,CA/DM;;GAAMV,Q"},"metadata":{},"sourceType":"module"}