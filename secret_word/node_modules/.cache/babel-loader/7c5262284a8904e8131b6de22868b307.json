{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\diego\\\\Documents\\\\Docker\\\\secret_word\\\\src\\\\components\\\\Game.js\",\n    _s = $RefreshSig$();\n\nimport './Game.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Game = _ref => {\n  _s();\n\n  let {\n    verifyLetter,\n    pickedWord,\n    pickedCategory,\n    letters,\n    guessedLetters,\n    wrongLetters,\n    guesses,\n    score\n  } = _ref;\n  const [letter, setLetter] = useState(\"\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"points\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"Pontua\\xE7\\xE3o: \", score]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Adivinhe a palavra\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"tip\",\n      children: [\"Dica sobre a palavra: \", /*#__PURE__*/_jsxDEV(\"span\", {\n        children: pickedCategory\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 35\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Voc\\xEA ainda tem \", guesses, \" tentativa(s)\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wordContainer\",\n      children: letters.map((letter, i) => guessedLetters.includes(letter) ? /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"letter\",\n        children: letters\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"blankSquare\"\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"letterContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Tente adivinhar uma letra da palavra:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"letter\",\n          maxLength: \"1\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: verifyLetter,\n          children: \"Jogar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wrongLettersContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Letras j\\xE1 utilizadas\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }, this), wrongLetters.map((letter, i) => /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [letter, \",\"]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Game, \"Ec3xa/mzG26E/6SQA6dx/R/IsM8=\");\n\n_c = Game;\nexport default Game;\n\nvar _c;\n\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["Game","verifyLetter","pickedWord","pickedCategory","letters","guessedLetters","wrongLetters","guesses","score","letter","setLetter","useState","map","i","includes"],"sources":["C:/Users/diego/Documents/Docker/secret_word/src/components/Game.js"],"sourcesContent":["import './Game.css';\r\n\r\nconst Game = ({\r\n    verifyLetter,\r\n    pickedWord,\r\n    pickedCategory,\r\n    letters,\r\n    guessedLetters,\r\n    wrongLetters,\r\n    guesses,\r\n    score\r\n}) => {\r\n\r\n    const [letter, setLetter] = useState(\"\");\r\n\r\n  return (\r\n    <div className=\"game\">\r\n        <p className='points'>\r\n            <span>Pontuação: {score}</span>\r\n        </p> \r\n        <h1>Adivinhe a palavra</h1>\r\n        <h3 className=\"tip\">\r\n            Dica sobre a palavra: <span>{pickedCategory}</span>\r\n        </h3>\r\n        <p>Você ainda tem {guesses} tentativa(s)</p>\r\n        <div className='wordContainer'>            \r\n            {letters.map((letter, i) => (\r\n                guessedLetters.includes(letter) ? (\r\n                    <span className=\"letter\">{letters}</span>\r\n                ) : (\r\n                    <span key={i} className='blankSquare'></span>\r\n                )\r\n            ))}\r\n        </div>\r\n        <div className='letterContainer'>\r\n            <p>Tente adivinhar uma letra da palavra:</p>\r\n            <form>\r\n                <input type=\"text\" name=\"letter\" maxLength=\"1\" required />\r\n                <button onClick={verifyLetter}>Jogar</button>\r\n            </form>\r\n        </div>\r\n        <div className='wrongLettersContainer'>\r\n            <p>Letras já utilizadas</p>\r\n            {\r\n                wrongLetters.map((letter, i) => (\r\n                    <span key={i}>{letter},</span>\r\n                ))\r\n            }\r\n            \r\n        </div>\r\n        \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Game"],"mappings":";;;AAAA,OAAO,YAAP;;;AAEA,MAAMA,IAAI,GAAG,QASP;EAAA;;EAAA,IATQ;IACVC,YADU;IAEVC,UAFU;IAGVC,cAHU;IAIVC,OAJU;IAKVC,cALU;IAMVC,YANU;IAOVC,OAPU;IAQVC;EARU,CASR;EAEF,MAAM,CAACC,MAAD,EAASC,SAAT,IAAsBC,QAAQ,CAAC,EAAD,CAApC;EAEF,oBACE;IAAK,SAAS,EAAC,MAAf;IAAA,wBACI;MAAG,SAAS,EAAC,QAAb;MAAA,uBACI;QAAA,gCAAkBH,KAAlB;MAAA;QAAA;QAAA;QAAA;MAAA;IADJ;MAAA;MAAA;MAAA;IAAA,QADJ,eAII;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAJJ,eAKI;MAAI,SAAS,EAAC,KAAd;MAAA,kDAC0B;QAAA,UAAOL;MAAP;QAAA;QAAA;QAAA;MAAA,QAD1B;IAAA;MAAA;MAAA;MAAA;IAAA,QALJ,eAQI;MAAA,iCAAmBI,OAAnB;IAAA;MAAA;MAAA;MAAA;IAAA,QARJ,eASI;MAAK,SAAS,EAAC,eAAf;MAAA,UACKH,OAAO,CAACQ,GAAR,CAAY,CAACH,MAAD,EAASI,CAAT,KACTR,cAAc,CAACS,QAAf,CAAwBL,MAAxB,iBACI;QAAM,SAAS,EAAC,QAAhB;QAAA,UAA0BL;MAA1B;QAAA;QAAA;QAAA;MAAA,QADJ,gBAGI;QAAc,SAAS,EAAC;MAAxB,GAAWS,CAAX;QAAA;QAAA;QAAA;MAAA,QAJP;IADL;MAAA;MAAA;MAAA;IAAA,QATJ,eAkBI;MAAK,SAAS,EAAC,iBAAf;MAAA,wBACI;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADJ,eAEI;QAAA,wBACI;UAAO,IAAI,EAAC,MAAZ;UAAmB,IAAI,EAAC,QAAxB;UAAiC,SAAS,EAAC,GAA3C;UAA+C,QAAQ;QAAvD;UAAA;UAAA;UAAA;QAAA,QADJ,eAEI;UAAQ,OAAO,EAAEZ,YAAjB;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAFJ;MAAA;QAAA;QAAA;QAAA;MAAA,QAFJ;IAAA;MAAA;MAAA;MAAA;IAAA,QAlBJ,eAyBI;MAAK,SAAS,EAAC,uBAAf;MAAA,wBACI;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADJ,EAGQK,YAAY,CAACM,GAAb,CAAiB,CAACH,MAAD,EAASI,CAAT,kBACb;QAAA,WAAeJ,MAAf;MAAA,GAAWI,CAAX;QAAA;QAAA;QAAA;MAAA,QADJ,CAHR;IAAA;MAAA;MAAA;MAAA;IAAA,QAzBJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAsCD,CAnDD;;GAAMb,I;;KAAAA,I;AAqDN,eAAeA,IAAf"},"metadata":{},"sourceType":"module"}